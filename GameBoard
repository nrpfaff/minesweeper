
/*
 * Beginner: 9x9	10 bombs		R: 8.1
 * Normal:	11x11	20 bombs		R: 6.05
 * Hard: 13x22		50 bombs		R: 5.72
 * Expert: 16x30	100 bombs		R: 4.8
 * 
 */

public class GameBoard {
	
	private int boardRow=9;
	private int boardCol=9;
	private int maxBomb=10;

	private int board[][] = new int[boardRow][boardCol];
	private boolean bombLocations[][] = new boolean[boardRow][boardCol];
	
	public void clearBoard(){
		for(int i = 0; i < boardRow; i++){
			for(int j =0; j < boardCol; j++){
					board[i][j] = 0;	
			}
		}
	}
	public void placeBombs(){
		int nBomb = 0;
		
	loop:	while(nBomb <= maxBomb){
				for(int i = 0; i < boardRow; i++){
					for(int j =0; j < boardCol; j++){
						int rand = (int)Math.ceil(Math.random()*1000);
						if(rand > 950){
							bombLocations[i][j] = true;
							board[i][j] = 9;
							nBomb += 1;
							if(nBomb == maxBomb){
								break loop;
							}
						}
					}
				}
			}//end loop
	}
	public void bombCounter(){
		for(int i = 0; i < boardRow; i++){ //loop for row transversal
			for(int j = 0; j < boardCol; j++){ //loop for column transversal
				if(bombLocations[i][j]){ //if there is a bomb at this location
					for(int s = i-1; s < i+2; s++){//goes to the previous row, 3 long
						for(int t = j-1; t < j+2; t++){//goes to the previous column, 3 long
							try{
								if(!bombLocations[s][t]){
									board[s][t]++; 
								}	
							} catch(IndexOutOfBoundsException e){}
						}
					}
				}	
			}
		}
	}
	public void printBoard(){
		for(int i = 0; i < boardRow; i++){
			for(int j =0; j < boardCol; j++){
			
				if(bombLocations[i][j]){
					System.out.print("X ");
				}
				
				else if(board[i][j] == 0){
					System.out.print("  ");
				}
				else{
					System.out.print(board[i][j] + " ");
				}
			}
			System.out.println("");
		}
	}
	
	public GameBoard(){
		setBoardRow(9);
		setBoardCol(9);
		setMaxBomb(10);

	}
	
	public int[][] getBoard(){
		return board;
	}
	public void setBoardRow(int r){
		boardRow = r;
	}
	public void setBoardCol(int c){
		boardCol = c;
	}
	public void setMaxBomb(int b){
		maxBomb = b;
	}
	public int getBoardRow(){
		return boardRow;
	}
	public int getBoardCol(){
		return boardCol;
	}
	public int getMaxBombs(){
		return maxBomb;
	}	
}
